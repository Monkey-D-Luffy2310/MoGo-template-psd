@mixin size($width: null, $height: null) {
  width: $width;
  height: $height;
}

@mixin absoluteCenter($direction: "left", $position: absolute) {
  position: $position;
  @if $direction == "left" {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $direction == "top" {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == "both" {
    left: 50%;
    top: 50%;
    transform: translateX(-50%, -50%);
  }
}

@mixin absoluteFull() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin bg($color : red) {
  background-color: $color;
}

@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin minWidth($breakpoint) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}

@mixin flexbox($items: stretch, $content: flex-start, $direction: row, $flex: flex, $wrap: nowrap) {
  display: flex;
  align-items: $items;
  justify-content: $content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin textClamp($rows: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-all;
}

@mixin hoverImage($item: ".about-item", $content: ".about-content", $transform: "true") {
  #{$item} { 
    position: relative;
    transition: transform .25s linear;
    &:after {
      content: "";
      @include absoluteFull();
      background-color: $third-color;
      z-index: -1;
      transition: transform .25s linear;
    }
    &:hover {
      #{$content} {
        opacity: 1;
      }
      @if $transform == "true" {
        transform: translate(-1rem, -1rem);
        &:after {
          transform: translate(1rem, 1rem);
        }
      }
    }
  }
  #{$content} {
    opacity: 0;
    transition: opacity .25s linear;
    content: "";
    @include absoluteFull();
    @include flexbox(center, center, column);
    background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8));
  }
}

@mixin scrollItem($width: 80%, $gap: 2.5rem, $padding: 1rem) {
  &-list {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: $width;
    grid-template-columns: unset;
    grid-column-gap: $gap;
    overflow-x: auto;
    padding: $padding;
    @include hideScroll;
    scroll-snap-type: x mandatory;
    scroll-snap-stop: always;
  }
  &-item {
    scroll-snap-align: center;
  }
}